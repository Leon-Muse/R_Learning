install.packages("nycflights")
install.packages("nycflights13")
View(flights)
library(tidyverse)
library(nycflights13)
View(flights)
flights |>
filter(dep_delay > 120)
flights |>
filter(month == 1 & day == 1)
flights |>
filter(month == 1 & day == 1)
library(tidyverse)
library(tidyverse)
library(nycflights13)
View(flights)
flights |>
filter(dep_delay > 120)
flights |>
filter(month == 1 & day == 1)
flights |>
filter(month == 1 | month ==2)
flights |>
arrange(desc(dep_delay))
flights |>
distinct(origin, dest)
flights |>
count(origin, dest, sort = TRUE)
flights |>
count(origin, dest, sort = TRUE)
flights |>
fliter(dest == "IAH")|>
mutate(speed = distance / air_time * 60) |>
select(year:day, dep_time, carrier, flight, speed) |>
arrange(desc(speed))
flights |>
fliter(dest == "IAH")|>
mutate(speed = distance / air_time * 60) |>
select(year:day, dep_time, carrier, flight, speed) |>
arrange(desc(speed))
library(tidyverse)
library(nycflights13)
View(flights)
flights |>
filter(dep_delay > 120)
flights |>
filter(month == 1 & day == 1)
#flight
flights |>
filter(month == 1 | month ==2)
flights |>
filter(month %in% c(1,2))
jan1 <- flights |>
filter(month == 1 & day == 1)
flights |>
arrange(year, month, day, dep_time)
flights |>
arrange(desc(dep_delay))
flights |>
distinct()
flights |>
distinct(origin, dest)
flights |>
distinct(origin, dest, .keep_all = TRUE)
flights |>
count(origin, dest, sort = TRUE)
#SECTION 3.3
#mutate adds new columns
flights |>
mutate(
gain = dep_delay - arr_delay,
speed = distance / air_time * 60
)
# the ".before" moves the new variables to the front
flights |>
mutate(
gain = dep_delay - arr_delay,
speed = distance / air_time * 60,
.before = 1
#   .after = day
)
flights |>
mutate(
gain = dep_delay - arr_delay,
hours = air_time / 60,
gain_per_hour = gain / hours,
.keep = "used"
)
#3.3.2
flights |>
select(year, month, day)
flights |>
select(year:day)
flights |>
select(!year:day)
flights |>
select(where(is.character))
# other things that go inside select are also starts_with,
#ends_with,contains,num_range
flights |>
select(tail_num = tailnum)
#can also use "rename()" or "clean_names()"
flights |>
relocate(time_hour, air_time)
#this moves them to the very front
flights |>
relocate(starts_with("arr"), .before = dep_time)
#helps choose a specific place
#3.4 Pipe
flights |>
fliter(dest == "IAH")|>
mutate(speed = distance / air_time * 60) |>
select(year:day, dep_tim
flights |>
flights |>
fliter(dest == "IAH")|>
mutate(speed = distance / air_time * 60) |>
select(year:day, dep_time, carrier, flight, speed) |>
arrange(desc(speed))
flights |>
fliter(dest == "IAH")|>
mutate(speed = distance / air_time * 60) |>
select(year:day, dep_time, carrier, flight, speed) |>
arrange(desc(speed))
flights |>
fliter(dest == "IAH")|>
mutate(speed = distance / air_time * 60) |>
select(year:day, dep_time, carrier, flight, speed) |>
arrange(desc(speed))
flights |>
filter(dest == "IAH") |>
mutate(speed = distance / air_time * 60) |>
select(year:day, dep_time, carrier, flight, speed) |>
arrange(desc(speed))
flights |>
group_by(month) |>
summarize (
avg_delay = mean(dep_delay)
)
flights |>
group_by(month) |>
summarize (
avg_delay = mean(dep_delay)
)
flights |>
group_by(month) |>
summarize(
avg_delay = mean(dep_delay, na.rm = TRUE),
n = n()
)
daily
daily <- flights |>
group_by(year,month, day)
daily
clear
packages.install("styler")
install.packages("styler")
styler:::set_style_transformers()
library(tidyverse)
table1 |>
mutate(rate = cases / population * 10000)
billboard
billboard |>
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
values_to = "rank",
values_drop_na  = TRUE
) |>
mutate(
week = parse_number(week)
)
billboard_longer <- billboard |>
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
values_to = "rank",
values_drop_na = TRUE
) |>
mutate(
week = parse_number(week)
)
billboard |>
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
values_to = "rank",
values_drop_na  = TRUE
) |>
billboard_longer <- billboard |>
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
values_to = "rank",
values_drop_na = TRUE
) |>
mutate(
week = parse_number(week)
)
billboard |>
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
values_to = "rank",
values_drop_na  = TRUE
) |>
billboard_longer <- billboard |>
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
values_to = "rank",
values_drop_na = TRUE
) |>
mutate(
week = parse_number(week)
)
billboard_longer
billboard_longer |>
ggplot(aes(x = week, y = rank, group = track)) +
geom_line(alpha = 0.25) +
scale_y_reverse()
df |>
pivot_longer(
cols = bp1:bp2,
names_to = "measurement",
values_to = "value"
)
df |>
pivot_longer(
cols = bp1:bp2,
names_to = "measurement",
values_to = "value"
)
df <- tribble(
~id, ~bp1, ~bp2,
"A", 100, 120,
"B", 140, 115,
"C", 120, 125
)
df |>
pivot_longer(
cols = bp1:bp2,
names_to = "measurement",
values_to = "value"
)
who2 |>
pivot_long(
cols = !(country:year),
names_to = c("diagnosis", "gender", "age"),
names_sep = "_",
values_to = "count"
)
who2 |>
pivot_long(
cols = !(country:year),
names_to = c("diagnosis", "gender", "age"),
names_sep = "_",
values_to = "count"
)
who2 |>
pivot_longer(
cols = !(country:year),
names_to = c("diagnosis", "gender", "age"),
names_sep = "_",
values_to = "count"
)
household |>
pivot_longer(
cols = !family,
names_to = c(".value", "child"),
names_sep = "_",
values_drop_na = TRUE
)
household |>
pivot_longer(
cols = !family,
names_to = c(".value", "child"),
names_sep = "_",
values_drop_na = TRUE
)
usethis::use_blank_slate()
source("C:/Users/heyit/Desktop/R_Learning/RDS/Whole Game/Data Tidying.R")
source("C:/Users/heyit/Desktop/R_Learning/RDS/Whole Game/Data Tidying.R")
library(tidyverse)
table1 |>
mutate(rate = cases / population * 10000)
table1 |>
group_by(year) |>
summarize(total_cases = sum(cases))
ggplot(table1, aes(x = year, y = cases)) +
geom_line(aes(group = country), color = "grey50") +
geom_point(aes(color = country, shape = country)) +
scale_x_continuous(breaks = c(1999, 2000)) #xaxis breaks at 1999 and 2000
billboard |>
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
values_to = "rank",
values_drop_na  = TRUE
) |>
billboard_longer <- billboard |>
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
values_to = "rank",
values_drop_na = TRUE
) |>
mutate(
week = parse_number(week)
)
billboard |>
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
values_to = "rank",
values_drop_na  = TRUE
) |>
billboard_longer <- billboard |>
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
values_to = "rank",
values_drop_na = TRUE
) |>
mutate(
week = parse_number(week)
)
billboard_longer |>
ggplot(aes(x = week, y = rank, group = track)) +
geom_line(alpha = 0.25) +
scale_y_reverse()
getwd()
cd
students <- read_csv("C:\Users\heyit\Desktop\R_Learning\RDS\Whole Game\students.csv")
library(tidyverse)
students <- read_csv("C:\Users\heyit\Desktop\R_Learning\RDS\Whole Game\students.csv")
students <- read_csv("C:\Usr\heyit\Desktop\R_Learning\RDS\Whole Game\students.csv")
students <- read_csv("C:\Users\heyit\Desktop\R_Learning\RDS\Whole Game\students.csv")
students
students
library(tidyverse)
students <- read_csv("https://pos.it/r4ds-students-csv")
students
students
students
library(tidyverse)
students <- read_csv("https://pos.it/r4ds-students-csv", na = c("N/A",""))
students
students |>
rename(
student_id = 'Student ID',
full_name = 'Full Name'
)
students |>
janitor::clean_names() |>
mutate(meal_plan = factor(meal_plan))
